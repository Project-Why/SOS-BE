import { PipeTransform } from '@nestjs/common'

import { MessageCreateDto } from '@interfaces'

import {
  ValidatorConstraint,
  ValidatorConstraintInterface,
} from 'class-validator'

/** Regular Expressions */
export const allowedCharacters =
  /^[A-Za-z0-9 .,?'!/()&:;=+\-_"$@ㄱ-ㅎ가-힣ㅏ-ㅣéÉ\n]*$/

export const alphabet = /^[A-Za-z]*$/
export const sign = /^[0-9.,?'!/()&:;=+\-_"$@ㄱ-ㅎㅏ-ㅣéÉ]*$/
export const hanguel = /^[가-힣]*$/

/** Translate Tables */
export const morseCode = {
  'A': '.-',
  'B': '-...',
  'C': '-.-.',
  'D': '-..',
  'E': '.',
  'É': '..-..',
  'F': '..-.',
  'G': '--.',
  'H': '....',
  'I': '..',
  'J': '.---',
  'K': '-.-',
  'L': '.-..',
  'M': '--',
  'N': '-.',
  'O': '---',
  'P': '.--.',
  'Q': '--.-',
  'R': '.-.',
  'S': '...',
  'T': '-',
  'U': '..-',
  'V': '...-',
  'W': '.--',
  'X': '-..-',
  'Y': '-.--',
  'Z': '--..',
  'a': '.-',
  'b': '-...',
  'c': '-.-.',
  'd': '-..',
  'e': '.',
  'é': '..-..',
  'f': '..-.',
  'g': '--.',
  'h': '....',
  'i': '..',
  'j': '.---',
  'k': '-.-',
  'l': '.-..',
  'm': '--',
  'n': '-.',
  'o': '---',
  'p': '.--.',
  'q': '--.-',
  'r': '.-.',
  's': '...',
  't': '-',
  'u': '..-',
  'v': '...-',
  'w': '.--',
  'x': '-..-',
  'y': '-.--',
  'z': '--..',
  '0': '-----',
  '1': '.----',
  '2': '..---',
  '3': '...--',
  '4': '....-',
  '5': '.....',
  '6': '-....',
  '7': '--...',
  '8': '---..',
  '9': '----.',
  '.': '.-.-.-',
  ',': '--..--',
  '?': '..--..',
  "'": '.----.',
  '!': '-.-.--',
  '/': '-..-.',
  '(': '-.--.',
  ')': '-.--.-',
  '&': '.-...',
  ':': '---...',
  ';': '-.-.-.',
  '=': '-...-',
  '+': '.-.-.',
  '-': '-....-',
  '_': '..--.-',
  '"': '.-..-.',
  '$': '...-..-',
  '@': '.--.-.',
  'ㄱ': '......',
  'ㄴ': '.....-',
  'ㄷ': '....-.',
  'ㄹ': '....--',
  'ㅁ': '...-..',
  'ㅂ': '...--.',
  'ㅅ': '...---',
  'ㅇ': '..-...',
  'ㅈ': '..-..-',
  'ㅊ': '..-.-.',
  'ㅋ': '..-.--',
  'ㅌ': '..---.',
  'ㅍ': '..----',
  'ㅎ': '.-....',
  'ㄲ': '.-...-',
  'ㄸ': '.-..--',
  'ㅃ': '.-.-..',
  'ㅆ': '.-.--.',
  'ㅉ': '.-.---',
  'ㄳ': '.--...',
  'ㄵ': '.--..-',
  'ㄶ': '.--.--',
  'ㄺ': '.---..',
  'ㄻ': '.---.-',
  'ㄼ': '.-----',
  'ㄽ': '---..-',
  'ㄾ': '---.-.',
  'ㄿ': '---.--',
  'ㅀ': '----..',
  'ㅄ': '-.....',
  'ㅏ': '-...-.',
  'ㅑ': '-...--',
  'ㅓ': '-..-..',
  'ㅕ': '-..-.-',
  'ㅗ': '-..--.',
  'ㅛ': '-..---',
  'ㅜ': '-.-...',
  'ㅠ': '-.-..-',
  'ㅡ': '-.--..',
  'ㅣ': '-.---.',
  'ㅐ': '-.----',
  'ㅒ': '--....',
  'ㅔ': '--...-',
  'ㅖ': '--..-.',
  'ㅘ': '--.-..',
  'ㅙ': '--.-.-',
  'ㅚ': '--.--.',
  'ㅝ': '--.---',
  'ㅞ': '----.-',
  'ㅟ': '-----.',
  'ㅢ': '------',
}

@ValidatorConstraint()
export class CheckValidText implements ValidatorConstraintInterface {
  validate(text: string) {
    return this.isValidByte(text) && this.isValidCharacter(text)
  }
  private isValidCharacter(text: string): boolean {
    return allowedCharacters.test(text)
  }
  private isValidByte(text: string): boolean {
    const byteLength = new TextEncoder().encode(text).length
    return byteLength <= 150
  }
}
